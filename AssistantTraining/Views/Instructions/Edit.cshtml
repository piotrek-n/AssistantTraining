@model AssistantTraining.ViewModel.InstructionEditData

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@section styles {  
<style>
.spinner {
  width: 100px;
}
.spinner input {
  text-align: right;
}
.input-group-btn-vertical {
  position: relative;
  white-space: nowrap;
  width: 1%;
  vertical-align: middle;
  display: table-cell;
}
.input-group-btn-vertical > .btn {
  display: block;
  float: none;
  width: 100%;
  max-width: 100%;
  padding: 8px;
  margin-left: -1px;
  position: relative;
  border-radius: 0;
}
.input-group-btn-vertical > .btn:first-child {
  border-top-right-radius: 4px;
}
.input-group-btn-vertical > .btn:last-child {
  margin-top: -2px;
  border-bottom-right-radius: 4px;
}
.input-group-btn-vertical i{
  position: absolute;
  top: 0;
  left: 4px;
}
</style>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Instruction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)
        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.Number, new { @class = "form-control", @readonly = "readonly" })
                @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.NumberOfTraining, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumberOfTraining, new { htmlAttributes = new { @class = "form-control", @id = "MainNumberOfTraining" } })
                    @Html.ValidationMessageFor(model => model.NumberOfTraining, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*Start*@
        <div class="form-group">
            @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.Version, new { @class = "form-control", @readonly = "readonly" })

                @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                
            </div>
            </div>
                       <div class="well">
                        Are you sure you want to change the version? After saving will create a new version of the instruction.
                        <div class="form-group">
                            @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">

                                <span class="input-group spinner">
                                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", @id = "NewVersion" } })
                                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                                    <div class="input-group-btn-vertical">
                                        <button class="btn btn-default" type="button"><i class="fa fa-caret-up"></i></button>
                                        <button class="btn btn-default" type="button"><i class="fa fa-caret-down"></i></button>
                                    </div>
                                </span>
                            </div>
                        </div>

                        @*<div class="form-group">
                            @Html.LabelFor(model => model.NumberOfTraining, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.NumberOfTraining, new { htmlAttributes = new { @class = "form-control", @id = "NumberOfTraining" } })
                                @Html.ValidationMessageFor(model => model.NumberOfTraining, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                        <div class="form-group">
                            <label class="control-label col-md-2" for="Name"></label>
                            <div class="col-md-10">
                                <button type="button" class="btn btn-primary" id="save-event">Change Version</button>
                            </div>
                        </div>
                    </div>
                    @*End*@
                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                           
                            @Html.TextBoxFor(model => model.Version, new { @class = "form-control", @readonly = "readonly" })

                            @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                            <div>
                                <br />
                                <button type="button" class="btn" data-toggle="modal" data-target="#myModal">Change Version</button>
                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="myModal" role="dialog">
                                <div class="modal-dialog">
                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                            <h4 class="modal-title">Change Version</h4>
                                        </div>
                                        <div class="modal-body">
                                            Are you sure you want to change the version? After saving will create a new version of the instruction.

                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
                                                <div class="input-group spinner">
                                                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", @id = "NewVersion" } })
                                                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                                                    <div class="input-group-btn-vertical">
                                                        <button class="btn btn-default" type="button"><i class="fa fa-caret-up"></i></button>
                                                        <button class="btn btn-default" type="button"><i class="fa fa-caret-down"></i></button>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.NumberOfTraining, htmlAttributes: new { @class = "control-label col-md-2" })
                                              
                                                @Html.EditorFor(model => model.NumberOfTraining, new { htmlAttributes = new { @class = "form-control", @id = "NumberOfTraining" } })
                                                @Html.ValidationMessageFor(model => model.NumberOfTraining, "", new { @class = "text-danger" })
                                               
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                            <button type="button" class="btn btn-primary" id="save-event">Yes</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>*@



                    <div class="form-group">
                        @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.DropDownListFor(x => x.SelectedId, Model.Items, new { @class = "form-control" })*@
                            @*@Html.DropDownList("Name", Model.Items, "Dropdown", new { @class = "form-control" })*@
                            @Html.ListBoxFor(x => x.SelectedIds, Model.Items, new { multiple = "multiple", @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-default" />
                        </div>
                    </div>
                </div>
                }

                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
                @Html.Hidden("RedirectTo", Url.Action("AddNewVersion", "Instructions", new { id = "ID", version = "VERSION", training = "TRAINING" }))

                @*<script src="~/Scripts/jquery-1.10.2.min.js"></script>*@
                <script src="~/Scripts/jquery.validate.min.js"></script>
                <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
                <script type="text/javascript">

                    $(document).ready(function () {
                        $('#save-event').on('click',
                                    function (evt) {
                                        $('#myModal').modal('toggle');
                                        var id = $("#ID").val();
                                        var version = $("#NewVersion").val();
                                        var training = $("#NumberOfTraining").val();
                                        var url = $("#RedirectTo").val().replace('ID', id).replace('VERSION', version).replace('TRAINING', training);
                                        location.href = url;
                                    }
                        );

                        $('.spinner .btn:first-of-type').on('click', function () {
                            $('.spinner input').val(parseInt($('.spinner input').val(), 10) + 1);
                        });
                        $('.spinner .btn:last-of-type').on('click', function () {
                            $('.spinner input').val(parseInt($('.spinner input').val(), 10) - 1);
                        });
                    })
                </script>
